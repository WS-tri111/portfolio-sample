/* 글로벌 세팅    */
/* 프로그램에서 변수 지정하듯 CSS에서도 그런것이 가능하다. */
/* 페이지 전반에서 사용되어지는 컬러나  폰트 사이즈 같은것을 한번 정의해서 계속 사용할수있다. */

:root {
  /* Color  : color라는 prefix를 만든다음에 아래와 같이 정의함  */
  --color-white: #ffffff;
  --color-light-white: #eeeeee;
  --color-dark-white: #bdbdbd;
  /* --color-pink: #fe918d; */
  --color-pink: #feccbe;
  /* #F4DDDD */
  /* --color-dark-pink: #ff6863; */
  --color-dark-pink: #ac4242;
  --color-dark-grey: #4d4d4d;
  --color-grey: #616161;
  --color-light-grey: #7c7979;
  --color-blue: #73aace;
  /* --color-yellow: #fff7d1; */
  --color-yellow: #feccbe;
  --color-orange: #feb546;
  --color-black: #000000;
  --color-dark-brown: #4e1f0e;
  --color-white-brown: #a86a40;

  /* Font Size */
  --font-large: 48px;
  --font-medium: 28px;
  --font-regular: 18px;
  --font-small: 16px;
  --font-micro: 14px;

  /* Font weight : 구글 폰트에서 정의한 부분... */
  --weight-bold: 700;
  --weight-semi-bold: 600;
  --weight-regular: 400;

  /* Size */
  --size-border-radius: 4px;

  /* Annimation */
  --animation-duration: 300ms;
}

/* Universal tags  : 공통적으로 적용해야할것들... */
/* 패딩을 주었을때 동일한 높이와 너비가 되도록  */
* {
  box-sizing: border-box;
}

body {
  margin: 0px;
  /* 구글폰트 적용하기 위해 여기에 구글폰트에서복사한것을 넣는다. */
  font-family: "Open Sans", sans-serif;
  /* 커서가 텍스트에 올라가면 텍스트 커서로 바뀐다 
  그것을 바뀌지않게 하기 위해 기본값으로 바꾼다.  */
  cursor: default;
}
/* 앵커 태그에 기본적인 밑줄 그어져있는것을 없앤다. */
a {
  text-decoration: none;
  color: var(--color-white);
}
/* 리스트 스타일 변경  */
ul {
  list-style: none;
  /* 왼쪽 padding이 40들어 가있어서 제거한다.  */
  padding-left: 0px;
}

/* 버튼의 기본값 셑팅 */
button {
  background-color: transparent;
  cursor: pointer;
  border: none;
  outline: none;
}

/* Typography */
/* 웹사이트 전반적으로 쓰여진 패딩에 대해서 텍스트에 대해서  */
/* 한번 스타일링을 해놓는다 : 타이포 그래피  */

h1 {
  font-size: var(--font-large);
  font-weight: var(--weight-bold);
  color: var(--color-black);
  margin: 16px 0px;
}
h2 {
  font-size: var(--font-medium);
  font-weight: var(--weight-semi-bold);
  color: var(--color-black);
  margin: 8px 0px;
}
h3 {
  font-size: var(--font-regular);
  font-weight: var(--weight-regular);
  color: var(--color-black);
  margin: 8px 0px;
}

p {
  font-size: var(--font-regular);
  font-weight: var(--weight-regular);
  color: var(--color-black);
  margin: 4px 0px;
}

/* Navbar 
박스가 양쪽에 나올수있게 플렉스박스로 한다. 
중심축은 수평축이다.    
중심축에서 정렬할수있는것은 justify-content이다.
스페이스 비트윈을 이용하여 간격이 떨어져 있도록 한다. 
*/
#navbar {
  /* navbar가 홈위로 올라오게 하기 위해 제일 위에 고정하므로 fixed사용한다 
  fixed 사용과 동시에 너비가 변경되므로  width 를 100% 해준다.*/
  position: fixed;
  width: 100%;
  display: flex;
  justify-content: space-between;
  /* navbar를 투명하게 한다음 스크롤링되면 진한색으로 변경 */
  background-color: transparent;
  /* 현재 수평축 중심이고 이것을 수직으로 가운데 정렬하려고한다. 
  이렇게 반대로 정리할 때는 align-items을 사용하여 정렬한다. */
  align-items: center;
  /* 넷바의 아이템들이  너무 오른쪽에 붙어있어서 조금 공간을 준다 */
  padding: 16px;
  /* 갑자기 변화되는것을 방지하기 위해 트랜지션을 사용한다. */
  transition: all var(--animation-duration) ease-in-out;
  /*프로젝트가 navbar위로 올라와서 아래와 같이 처리한다.  */
  /* navbar는 항상 위에 있도록 처리함. */
  z-index: 1;
}

#navbar.navbar--dark {
  background-color: var(--color-pink);
  padding: 8px;
}

.navbar__menu {
  display: flex;
}

/* navbar로고 사이즈를 키워봅시다. */
.navbar__logo {
  font-size: var(--font-medium);
  font-weight: var(--weight-semi-bold);
}

.navbar__menu__item {
  padding: 8px 12px;
  margin: 0px 4px;
  color: var(--color-white);
  /* body 에서 커서를 디폴트로 정해서 기본커서모양인데 
  여기서 커서를 포인터로 정해놓으면손가락 모양으로 바뀐다. */
  cursor: pointer;
  /* 아래 border-radius: var(--size-border-radius); 을  여기에 작성하면 
  두번 작성하지 않아도 된다.  */
}

/* HOME에 라운딩네모 테두리 그리기 */
.navbar__menu__item.active {
  border: 1px solid var(--color-white);
  border-radius: var(--size-border-radius);
}

.navbar__menu__item:hover {
  background-color: var(--color-dark-pink);
  border-radius: var(--size-border-radius);
}

/*1. position: absolute - 기존자리에서 빠져나와서 포지션된다 
  1-1  이결과 햄버거가 가장 왼쪽으로 이동된다
  2. top:38px, right:32px 등 이용하여 옮겨준다
  3. display : none - 평소에는 보여지면 안되니 none을 한다.
*/
.navbar__toggle-btn {
  position: absolute;
  top: 24px;
  right: 32px;
  font-size: 24px;
  color: var(--color-white);
  display: none;
}

/* Home */
#home {
  background: url("imgs/home-background3.png") center/cover no-repeat;
  padding: 40px;
  /* home이 navbar 랑 붙어있어서  간격을 좀더 준다 */
  padding-top: 120px;
  text-align: center;
}
.home__avatar {
  width: 250px;
  height: 250px;
  border-radius: 50%;
  border: 2px solid var(--color-light-white);
}

.home__title,
.home__description {
  color: var(--color-white);
}

.home__contact {
  color: var(--color-white);
  font-size: var(--font-regular);
  font-weight: var(--weight-bold);
  margin: 24px;
  padding: 8px 12px;
  border: 2px solid var(--color-white);
  border-radius: var(--size-border-radius);
}

/* Section common : 공통적인 것들을 여기 적한다.*/
/* 아래 코드 작성후 html코드의 about섹션   부분에 class section 추가한다.  */

.section {
  padding: 50px;
  text-align: center;
  /* 너무 커져 버리면 보기가 좋지 않기때문에 최대로 커질수있는 너비를 지정합니다 */
  /* 보통 1000 ~ 1200이 데스크탑에서 편하게 볼 수 있는 너비 입니다.  */
  /* max-width: 1200px; */
  /* 그런데 About me 영역이 중간정렬이 안된것을 확인 할 수 있다.
  크롬브라우져 개발자도구 에서 요소검사하여  About me 영역의 마진이 오른쪽에만 들어가 있는 것을 확인할수있다. 
  이것때문에 text-align : center 라고 했음에도 불구하고 중간정렬이 안되는것이다. 
  이럴때는 아래와 같이 margin:auto를 사용한다.*/
  margin: auto;
}

/* 위의 max-width: 1200px; 를 아래로 이동한다. */
.section__container {
  max-width: 1200px;
  /* 개발툴로 마진이 오른쪽에 있는것확인후 마진오토를 적용해서 자동적으로 
중간에 올수있게 한다. */
  margin: auto;
}

/* About 를 꾸며 보도록 합니다 */
.about__majors {
  display: flex;
  /* 플렉스박스 된 항목들을 각각 스페이싱을 넣어야 하니   */
  justify-content: space-between;
  /* 위 아래로 붙어 있으니 마진을 준다. */
  margin: 80px 0;
}

/* 아이콘을 둥글게 하고 크기를 조정해 본다. */
.major__icon {
  width: 170px;
  height: 170px;
  /* 임시로 만들면서 사이즈를 확인해야 하니 색상을 넣어주어도 좋다. */
  /* background-color: green; */

  /* 어썸폰트도 결국은 폰트이기 때문에 폰트 사이즈로 크기를 지정한다. */
  font-size: 72px;

  /* 그런데 이 어썸폰트가 수직 기준으로 중간에 와야하기 때문에 라인하잇을 높이(현재높이170px)만큼 지정한다. */
  line-height: 170px;
  /* 아이템들이 중간에 오지 않고 왼쪽에 정렬되어있는데 이것도 요소검사를 통하여 확인해본다
  오른쪽에 마진이 잡혀있는것을 확인할수있다 그래서 마진오토를 사용하여 해결한다. */
  margin: auto;

  /* 다되었으면 임시로 지정한 위의 백그라운드 컬러를 지워준다. */

  /* 이제  border 를 만들어 본다 */

  border: 1px solid var(--color-blue);
  /* 동그라 모양을 만들기  */
  border-radius: 50%;
  /* 아이콘과 디스크립션 사이 중간에 스페이스가 너무없어서 아래와 같이 한다. */
  margin-bottom: 16px;

  /* 아이콘의 색상도 블루로 변경해본다. */
  color: var(--color-blue);

  /* 결과 화면에서 Front-end, Mobile등의 제목글자가 강조되어있지 않은것은 
  html파일에서 해당영역이 div로 되어있어서 h2로 변경해준다. */
}

.major__title,
.major__description {
  color: var(--color-dark-grey);
}
.major__description {
  font-size: var(--font-small);
}

/* .major__icon :hover 
=> 동그라미에 아이콘이 닿으면 전체가 반등한다.
.major__icon i:hover 
=> 동그라미에는 반응하지 않고 해당 아이콘 에서만 반응한다.*/

/* 그런데 우리가 원하는것은 아이콘 전체에 호버가 되었을때
그안에 있는 i 에게 스타일일을 적용하겠다 라고 해 놓으면 
원아에 가져다 놓아도 원은 변동 되 지 않고 아이콘만 변경되는 것을 
알수 있다.
=>  .major__icon :hover i 
*/

.major__icon:hover i {
  color: var(--color-pink);
  transform: rotate(-30deg) scale(1.1);
}

/* 그런데 이렇게만 하면 급작스럽게 변해서 애니메이션을 준다. */
/* 300ms는 사용자가 느끼기에 뭔가 재미있는 애니메이션이 있지만 
답답하지 않을 정도의 조금 표준화된 좋은 수치입니다. 
만약 1s를 주면 답답한걸 알수 있다. 
애니메이션은 300ms를 이용하는것을 추천한다.
위에 변수로 300ms로 정의 되어있는 --animation-duration을 사용  */

.major__icon i {
  transition: all var(--animation-duration) ease;
}

.job {
  display: flex;
  /* 중간배열을 위한 align-items: center로 설정; */
  align-items: center;
}

/* html파일의 div class=job 의 img태그 다음에
잡디스크립션이라고 박스를 하나 만들어 2개의 p태그들을 그안에 넣는다. */

/* 좀 떨어트리기위한 마진을준다. */
.job__description {
  margin: 0 16px;
  text-align: left;
}

.job__name,
.job__description {
  color: var(--color-light-grey);
}

.job__name {
  font-size: var(--font-small);
}

.job__period {
  font-size: var(--font-micro);
}
/* Skill */
/* 백그라운드 컬러를 노랑으로 변경한다 */
#skills {
  background-color: var(--color-yellow);
}

/* 이렇게 하면 브라우져를 크게 해도 배경처럼 노랑 색상도 늘어나야 하는데  위의 섹션에서 max-width:1200 으로 해서
더이상 늘어나지 않는다.
그래서 mat-width는 섹션 자체에대가 하는것이 아니라 
우리가 원하는 부분만 넣을수 있도록 섹션컨테이너에 따로 떼어내서 적용하고 싶은곳에서 만 적용한다.
.section 부분 수정한다. */

.skillset {
  display: flex;
  background-color: var(--color-light-grey);
  color: var(--color-light-white);
  margin: 20px 0;
}

.skillset__left {
  flex-basis: 60%;
  background-color: var(--color-dark-grey);
  padding: 20px 40px;
}

.skillset__right {
  flex-basis: 40%;
}

.tools {
  background-color: var(--color-grey);
}

.tools > .skillset__title {
  margin-top: 0;
}

.skillset__title {
  color: var(--color-white);
}

/* flex 하면 왼쪽으로 붙는다 그리고 justify-content: space-between해야 양쪽으로 갈라진다. */
.skillset__description {
  display: flex;
  justify-content: space-between;
}

/* prograss bar 를 기본 바탕과 해당 value값으로 겹치게 만든다. */
/* contents 가 없기 때문에 width와 height 의 값을 주어야한다. */
/* 그런데 width:00% 정해지면  모든 항목들이 일괄적으로 같은 크기로 나타내지기때문에 */
/* 이런 width는 css에서 정해지는 것이 아닌 html 태그 에서 정해지는 것이다. */
/* 그리고 나중에 이런 데이터들은 따로 추출해서 제이슨에서 관리하고 
제이슨에서 동적으로 받아오고이런 데이터를 html 코드로 변환해서 자동적으로 생성할거기 때문에 전부다
html에 적용이 되어 있어야 된다 . 
아래의 (sytle="width:90% ) 이부분이 명시 되어야한다.
<div class="skill__value" sytle="width:90%"></div>*/

.skill__bar {
  /* width: 50%;  여기서 정의하지 않고 html 태그 에서 정의한다.*/
  height: 3px;
  background-color: var(--color-grey);
}

.skill__value {
  width: 100%;
  height: 3px;
  background-color: var(--color-orange);
}

/* 너무 조밀하니 마진을 주어 좀 간격을 준다. */
.skill {
  margin-bottom: 32px;
}

.tools,
.etc {
  padding: 20px;
}

/* Work */
.work__categories {
  margin: 40px;
}
.category__btn {
  border: 1px solid var(--color-dark-white);
  border-radius: var(--size-border-radius);
  font-size: var(--font-regular);
  padding: 8px 48px;
}

/* interests */
.interests__categories {
  margin: 40px;
}

.category__btn2 {
  border: 1px solid var(--color-dark-white);
  border-radius: var(--size-border-radius);
  font-size: var(--font-regular);
  padding: 8px 48px;
}

/* 카테고리 버튼에 액티브라는 클래스가 있거나 호버가 되면... */
.category__btn.active,
.category__btn:hover {
  background-color: var(--color-pink);
  color: white;
}

.category__btn2.active,
.category__btn2:hover {
  background-color: var(--color-dark-brown);
  color: white;
}

.category__btn.active .category__count,
.category__btn:hover .category__count {
  opacity: 1;
  top: 0;
}

.category__btn2.active .category__count2,
.category__btn2:hover .category__count2 {
  opacity: 1;
  top: 0;
}

.category__count {
  background-color: var(--color-orange);
  border-radius: 50%;
  color: var(--color-white);
  width: 24px;
  height: 24px;
  line-height: 24px; /* 중간으로 오게한다.*/
  display: inline-block;
  position: relative;
  top: -20px;
  left: 4px;
  opacity: 0;
  transition: all var(--animation-duration) ease-in;
}

.category__count2 {
  background-color: var(--color-white-brown);
  border-radius: 50%;
  color: var(--color-white);
  width: 24px;
  height: 24px;
  line-height: 24px; /* 중간으로 오게한다.*/
  display: inline-block;
  position: relative;
  top: -20px;
  left: 4px;
  opacity: 0;
  transition: all var(--animation-duration) ease-in;
}

.work__projects {
  display: flex;
  flex-wrap: wrap; /*한자리에 차지 않으면 밑으로 떨어질수있도록*/
  justify-content: center;
}

.interests__minivelo {
  display: flex;
  flex-wrap: wrap; /*한자리에 차지 않으면 밑으로 떨어질수있도록*/
  justify-content: center;
}

.project {
  position: relative;
  /* 중간으로 배치 */
  display: flex;
  justify-content: center;
  align-items: center;
  /* 중간으로 배치 */
  width: 280px;
  height: 250px;
  margin: 2px;
  background-color: var(--color-light-white);
}

.minivelo {
  position: relative;
  /* 중간으로 배치 */
  display: flex;
  justify-content: center;
  align-items: center;
  /* 중간으로 배치 */
  width: 280px;
  height: 250px;
  margin: 2px;
  background-color: var(--color-light-white);
}

.project__img {
  max-width: 100%;
  max-height: 100%;
}

/*  포지션 absolute를 쓰게 되면 근접한 부모노드중에
기본값인 포지션 스태틱을 쓰지 않는 부모를 찾아가게 된다. */

.project__description {
  position: absolute;
  background-color: black;
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  opacity: 0;
  transform: translateY(10px);
  transition: all var(--animation-duration) ease-in;
}

.project:hover .project__description {
  opacity: 0.8;
  transform: translateY(10px);
}

.minivelo:hover .project__description {
  opacity: 0.8;
  transform: translateY(10px);
}

.project__description h3 {
  color: var(--color-white);
}

.project__description h3:after {
  content: "";
  display: block;
  position: relative;
  left: 50%;
  width: 25px;
  height: 2px;
  margin-left: -12px;
  margin-top: 8px;
  background-color: var(--color-dark-white);
}

/* Testimonial */
#testimonials {
  background-color: var(--color-light-white);
}

.testimonials {
  margin: 40px;
}

.testimonial {
  display: flex;
  margin: 32px 0;
}

.testimonial__avtar {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  background-color: var(--color-pink);
}

.testimonial__avtar:nth-child(odd) {
  margin-right: 40px;
}

.testimonial__avtar:nth-child(even) {
  margin-left: 40px;
}

.testmonial__speech-bubble {
  padding: 18px;
  background-color: var(--color-white);
  border-radius: var(--size-border-radius);
}

.testmonial__speech-bubble p {
  color: var(--color-light-grey);
}

.testmonial__speech-bubble a {
  color: var(--color-pink);
}

/* Contact */
#contact {
  background-color: var(--color-pink);
}

.contact__title,
.contact__email,
.contact__rights {
  color: var(--color-white);
}

.contact__title {
  margin: 32px 0;
}

.contact__links {
  font-size: var(--font-large);
  margin: 24px 0;
}

.contact__links i:hover {
  transform: scale(1.1);
  color: black;
  transition: all var(--animation-duration) ease-in;
}

/* scroll */
.arrow-up {
  /* 어디서든 상관없이 뷰포트 안에서 항상여기 오른쪽 밑에있게한다.fixed */
  position: fixed;
  bottom: 50px;
  right: 50px;
  width: 70px;
  height: 70px;
  font-size: 50px;
  color: var(--color-white);
  background-color: var(--color-pink);
  border-radius: 50%;
  /* 원래는 안보이다가 스크롤링이 되면 보이게한다.  */
  /* display: none; */
  opacity: 0;
  /* transition: all 300ms ease-in; /// */
  pointer-events: none; /*none하는 이유는 살짝 스크롤링 내릴때 아이콘 안보일때 클릭하면 작동이되어서 그걸 방지하기 위함.*/
  transition: opacity 300ms ease-in;
  /*display 같은경우 완전히 없어졌다가 나타/나기 때문에 에니메이션이 안된다.*/
}

.arrow-up.visible {
  /* display: block; */
  opacity: 1;
  pointer-events: auto;
}

/* For below 768px screen width */
@media screen and (max-width: 768px) {
  .navbar__toggle-btn {
    /* 화면크기가 작아지면 햄버거가 나타난다 */
    display: block;
  }

  #navbar {
    /* 메뉴가 위에서 아래로 보여진다. */
    flex-direction: column;
    align-items: flex-start;
  }

  .navbar__menu {
    flex-direction: column;
    text-align: center;
    width: 100%;
    display: none;
  }

  .about__majors {
    flex-direction: column;
  }

  .major {
    margin-bottom: 38px;
  }

  .skillset {
    flex-direction: column;
  }

  .project {
    flex-grow: 1;
  }

  .minivelo {
    flex-grow: 1;
  }

  .testimonial__avtar {
    width: 80px;
    height: 80px;
  }
}
